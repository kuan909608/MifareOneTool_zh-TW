<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonSaveSectorEdit.Text" xml:space="preserve">
    <value>Изменить сектор (Enter)</value>
  </data>
  <data name="Column1.HeaderText" xml:space="preserve">
    <value>Cектор</value>
  </data>
  <data name="comboBox1.Items" xml:space="preserve">
    <value>KeyAB читать, писать, увеличивать и уменьшать</value>
  </data>
  <data name="comboBox1.Items1" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения и амортизации / недоступен для записи и добавляет ценность</value>
  </data>
  <data name="comboBox1.Items2" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения / записи, а также для увеличения или уменьшения</value>
  </data>
  <data name="comboBox1.Items3" xml:space="preserve">
    <value>KeyB чтение / запись / не сложение и вычитание</value>
  </data>
  <data name="comboBox1.Items4" xml:space="preserve">
    <value>KeyAB чтение / KeyB запись / без увеличения или уменьшения</value>
  </data>
  <data name="comboBox1.Items5" xml:space="preserve">
    <value>[Только для чтения] KeyB для чтения / не для записи и увеличения или уменьшения</value>
  </data>
  <data name="comboBox1.Items6" xml:space="preserve">
    <value>KeyAB чтение и ухудшение / KeyB написание и добавленная стоимость</value>
  </data>
  <data name="comboBox1.Items7" xml:space="preserve">
    <value>[только для чтения] заблокировать сектор</value>
  </data>
  <data name="comboBox2.Items" xml:space="preserve">
    <value>KeyAB читать, писать, увеличивать и уменьшать</value>
  </data>
  <data name="comboBox2.Items1" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения и амортизации / недоступен для записи и добавляет ценность</value>
  </data>
  <data name="comboBox2.Items2" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения / записи, а также для увеличения или уменьшения</value>
  </data>
  <data name="comboBox2.Items3" xml:space="preserve">
    <value>KeyB чтение / запись / не сложение и вычитание</value>
  </data>
  <data name="comboBox2.Items4" xml:space="preserve">
    <value>KeyAB чтение / KeyB запись / без увеличения или уменьшения</value>
  </data>
  <data name="comboBox2.Items5" xml:space="preserve">
    <value>[Только для чтения] KeyB для чтения / не для записи и увеличения или уменьшения</value>
  </data>
  <data name="comboBox2.Items6" xml:space="preserve">
    <value>KeyAB чтение и ухудшение / KeyB написание и добавленная стоимость</value>
  </data>
  <data name="comboBox2.Items7" xml:space="preserve">
    <value>[только для чтения] заблокировать сектор</value>
  </data>
  <data name="comboBox3.Items" xml:space="preserve">
    <value>KeyAB читать, писать, увеличивать и уменьшать</value>
  </data>
  <data name="comboBox3.Items1" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения и амортизации / недоступен для записи и добавляет ценность</value>
  </data>
  <data name="comboBox3.Items2" xml:space="preserve">
    <value>[только для чтения] KeyAB для чтения / записи, а также для увеличения или уменьшения</value>
  </data>
  <data name="comboBox3.Items3" xml:space="preserve">
    <value>KeyB чтение / запись / не сложение и вычитание</value>
  </data>
  <data name="comboBox3.Items4" xml:space="preserve">
    <value>KeyAB чтение / KeyB запись / без увеличения или уменьшения</value>
  </data>
  <data name="comboBox3.Items5" xml:space="preserve">
    <value>[Только для чтения] KeyB для чтения / не для записи и увеличения или уменьшения</value>
  </data>
  <data name="comboBox3.Items6" xml:space="preserve">
    <value>KeyAB чтение и ухудшение / KeyB написание и добавленная стоимость</value>
  </data>
  <data name="comboBox3.Items7" xml:space="preserve">
    <value>[только для чтения] заблокировать сектор</value>
  </data>
  <data name="comboBox4.Items" xml:space="preserve">
    <value>[Необратимый] KeyA: запись / AC: только чтение / KeyB: чтение и запись</value>
  </data>
  <data name="comboBox4.Items1" xml:space="preserve">
    <value>KeyA: запись / AC: чтение / запись / KeyB: чтение и запись</value>
  </data>
  <data name="comboBox4.Items2" xml:space="preserve">
    <value>[Необратимый] KeyA: невозможно чтение / запись / AC: только для чтения / KeyB: чтение</value>
  </data>
  <data name="comboBox4.Items3" xml:space="preserve">
    <value>KeyA: B запись / AC: A только для чтения B чтение / запись / KeyB: B запись</value>
  </data>
  <data name="comboBox4.Items4" xml:space="preserve">
    <value>[необратимый] KeyA: запись B / AC: только чтение AB / KeyB: запись B</value>
  </data>
  <data name="comboBox4.Items5" xml:space="preserve">
    <value>KeyA: невозможно чтение / запись / AC: A только для чтения B чтение / запись / KeyB: невозможно чтение или запись</value>
  </data>
  <data name="comboBox4.Items6" xml:space="preserve">
    <value>[Необратимый] KeyA: невозможно чтение / запись / AC: AB только для чтения / KeyB: невозможно чтение или запись</value>
  </data>
  <data name="comboBox4.Items7" xml:space="preserve">
    <value>[Необратимый] KeyA: невозможно чтение / запись / AC: AB только для чтения / KeyB: невозможно чтение или запись (повторяется?)</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Редактор дампа (бета)</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Список секторов</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Информация о секторе</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Просмотр</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Блок 0</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Блок 1</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Блок 2</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Ключ A</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Ключ B</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Условия доступа блока 0</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Условия доступа блока 1</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Условия доступа блока 2</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Ключ / ACbits разрешение</value>
  </data>
  <data name="labelCurSec.Text" xml:space="preserve">
    <value>Текущий выбранный сектор: ?</value>
  </data>
  <data name="richTextBox1.Lines[0]" xml:space="preserve">
    <value>Добро пожаловать в интегрированный редактор M1T S50HTool!</value>
  </data>
  <data name="richTextBox1.Lines[1]" xml:space="preserve">
    <value>Откройте файл, пожалуйста, нажмите на файл в верхнем левом углу - открыть или Ctrl + O</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Добро пожаловать в интегрированный редактор дампа!
Чтобы открыть файл, пожалуйста, нажмите на Файл в верхнем левом углу - Открыть или Ctrl + O
Вы можете обновить данные вашей карты.</value>
  </data>
  <data name="保存ToolStripMenuItem.Text" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="修改UIDToolStripMenuItem.Text" xml:space="preserve">
    <value>Изменить UID</value>
  </data>
  <data name="列出全卡密钥ToolStripMenuItem.Text" xml:space="preserve">
    <value>Перечислите полный ключ карты</value>
  </data>
  <data name="另存为ToolStripMenuItem.Text" xml:space="preserve">
    <value>Сохранить как</value>
  </data>
  <data name="导入MCT格式ToolStripMenuItem.Text" xml:space="preserve">
    <value>Импортировать формат MCT</value>
  </data>
  <data name="导出为MCT格式ToolStripMenuItem.Text" xml:space="preserve">
    <value>Экспорт в формат MCT</value>
  </data>
  <data name="导出密钥字典ToolStripMenuItem.Text" xml:space="preserve">
    <value>Словарь ключей экспорта</value>
  </data>
  <data name="工具ToolStripMenuItem.Text" xml:space="preserve">
    <value>Инструменты</value>
  </data>
  <data name="打开ToolStripMenuItem.Text" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="文件ToolStripMenuItem.Text" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="新建ToolStripMenuItem.Text" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="检查全卡ToolStripMenuItem.Text" xml:space="preserve">
    <value>Проверка полной карты</value>
  </data>
  <data name="检查并纠正全卡ToolStripMenuItem.Text" xml:space="preserve">
    <value>Проверка и исправление полной карты</value>
  </data>
  <data name="退出ToolStripMenuItem.Text" xml:space="preserve">
    <value>Выход</value>
  </data>
</root>